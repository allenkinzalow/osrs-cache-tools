package com.kinztech.cache.sql.schema

import org.jetbrains.exposed.sql.Table

object Objects: Table() {
    val id = integer("id").primaryKey()
    val name = text("name")
    val sizeX = integer("size_x").default(1)
    val sizeY = integer("size_y").default(1)
    val transformVarbit = integer("transform_varbit").nullable()
    val transformVarp = integer("transform_varp").nullable()
    val worldMapElementId = integer("world_map_element").nullable()
    val actions = varchar("actions", length=255).default("['','', '', '', '']")
    val clipType = integer("clip_type").default(2)
    val isClipped = bool("is_clipped").default(true)
    val modelClipped = bool("model_clipped").default(false)
    val isHollow = bool("is_hollow").default(true)
    val impenetrable = bool("impenetrable").default(true)
    val accessBlock = integer("access_block").default(0)
    val colorFind = text("color_find").nullable()
    val colorReplace = text("color_replace").nullable()
    val textureFind = text("texture_find").nullable()
    val textureReplace = text("texture_replace").nullable()
    val interactable = integer("interactable").nullable()
    val animationId = integer("animation_id").nullable()
    val ambient = integer("ambient").default(0)
    val contrast = integer("contrast").default(0)
    val mapSceneId = integer("map_scene_id").nullable()
    val modelSizeX = integer("model_size_x").default(128)
    val modelSizeHeight = integer("model_size_height").default(128)
    val modelSizeY = integer("model_size_y").default(128)
    val offsetX = integer("offset_x").default(0)
    val offsetHeight = integer("offset_height").default(0)
    val offsetY = integer("offset_y").default(0)
    val decorOffset = integer("decor_offset").default(16)
    val isMirrored = bool("is_mirrored").default(false)
    val obstructsGround = bool("obstructs_ground").default(false)
    val nonFlatShading = bool("non_flat_shading").default(false)
    val contouredGround = integer("contoured_ground").nullable()
    val supportItems = integer("support_items").nullable()
    val transforms = text("transforms").nullable()
    val ambientSoundId = integer("as_id").nullable()
    val ambientSoundDuration = integer("as_duration").nullable()
    val ambientSoundDurationExtend = integer("as_duration_extend").nullable()
    val ambientSoundRadius = integer("as_radius").nullable()
    val soundEffectIds = text("sound_effect_ids").nullable()
    val params = text("params").nullable()
}